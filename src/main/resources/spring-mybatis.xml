<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


        <context:property-placeholder location="classpath:db-config.properties" ignore-unresolvable="true"/>

        <!-- 配置mybatis的一些参数 -->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
              init-method="init" destroy-method="close">
                <!-- 基本属性 url、user、password -->
                <property name="url" value="jdbc:mysql://${db.ip}:${db.port}/${db.name}?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false" />
                <property name="username" value="${db.user}" />
                <property name="password" value="${db.pwd}" />

                <!-- 配置初始化大小、最小、最大 -->
                <property name="initialSize" value="1" />
                <property name="minIdle" value="1" />
                <property name="maxActive" value="20" />

                <!-- 配置获取连接等待超时的时间 -->
                <property name="maxWait" value="60000" />

                <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
                <property name="timeBetweenEvictionRunsMillis" value="60000" />

                <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
                <property name="minEvictableIdleTimeMillis" value="300000" />

                <property name="validationQuery" value="SELECT 'x'" />
                <property name="testWhileIdle" value="true" />
                <property name="testOnBorrow" value="false" />
                <property name="testOnReturn" value="false" />

                <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
                <property name="poolPreparedStatements" value="true" />
                <property name="maxPoolPreparedStatementPerConnectionSize"
                          value="20" />

                <!-- 配置监控统计拦截的filters -->
                <property name="filters" value="stat" />
        </bean>


        <!-- 配置事物数据库 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!-- 数据源 -->
                <property name="dataSource" ref="dataSource" />
                <!-- 扫描xml文件 -->
                <property name="mapperLocations" value="classpath:/mapper/*.xml" />
                <!-- 扫描配置文件 -->
                <property name="configLocation" value="classpath:/mybatis.xml" />
        </bean>

        <!-- 得到操作数据的模板 -->
        <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
                <constructor-arg index="0" ref="sqlSessionFactory" />
        </bean>

        <!-- Mapper接口所在包名 -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="basePackage" value="com.kxxfydj.mapper" />
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        </bean>

        <!-- 定义事务通知 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource" ref="dataSource" />
        </bean>

        <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
                <!--<tx:attributes>-->
                        <!--<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="generateCreate*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception" />-->
                        <!--<tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
                        <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
                        <!--<tx:method name="*" propagation="SUPPORTS" read-only="true" />-->
                <!--</tx:attributes>-->
        <!--</tx:advice>-->


</beans>